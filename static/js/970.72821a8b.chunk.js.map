{"version":3,"file":"static/js/970.72821a8b.chunk.js","mappings":"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","sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Navigator/Navigator.styled.jsx","components/Navigator/Navigator.jsx","components/TweetsItem/TweetsItem.styled.jsx","components/TweetsItem/TweetsItem.jsx","components/TweetsList/TweetsList.styled.jsx","services/api.js","components/TweetsList/TweetsList.jsx","components/LoadMoreBtn/LoadMoreBtn.styled.jsx","components/LoadMoreBtn/LoadMoreBtn.jsx","pages/Tweets.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const SectionWrapper = styled.section`\n  padding-top: 80px;\n  padding-bottom: 40px;\n`;\n","import { SectionWrapper } from './Section.styled';\n\nexport const Section = ({ children }) => {\n  return <SectionWrapper>{children}</SectionWrapper>;\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const NavMenu = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding-top: 30px;\n  width: 100%;\n`;\nexport const FilterWrapper = styled.div`\n  display: flex;\n  align-content: center;\n  gap: 7px;\n`;\nexport const Select = styled.select`\n  padding: 5px;\n  font-size: 22px;\n  font-weight: 600;\n  line-height: 1.22;\n  background-color: #5736a3;\n  color: #ebd8ff;\n  border-radius: 10px;\n  outline: none;\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n`;\nexport const BackButton = styled(Link)`\n  display: flex;\n  gap: 7px;\n  width: max-content;\n  align-items: center;\n  padding: 10px;\n  font-style: normal;\n  font-size: 24px;\n  line-height: 1.2;\n  color: #373737;\n  text-decoration: none;\n\n  transition: 250ms;\n  &:hover {\n    color: white;\n    text-shadow: 0 0 5px rgb(255, 255, 255), 0 0 10px rgb(255, 255, 255),\n      0 0 15px rgb(255, 255, 255), 0 0 20px rgb(255, 255, 255),\n      0 0 30px rgb(255, 255, 255), 0 0 40px rgb(255, 255, 255),\n      0 0 55px rgb(255, 255, 255), 0 0 75px rgb(255, 255, 255);\n  }\n`;\n","import { BsFilterLeft } from 'react-icons/bs';\nimport { HiArrowLeft } from 'react-icons/hi';\nimport { NavMenu, FilterWrapper, Select, BackButton } from './Navigator.styled';\n\nexport const Navigator = ({ filterValue }) => {\n  return (\n    <NavMenu>\n      <BackButton to=\"/\">\n        <HiArrowLeft size=\"24\" />\n        Back\n      </BackButton>\n      <FilterWrapper>\n        <Select name=\"tweeters\" onChange={filterValue}>\n          <option value=\"all\">show all</option>\n          <option value=\"follow\">follow</option>\n          <option value=\"followings\">followings</option>\n        </Select>\n        <BsFilterLeft size=\"36\" />\n      </FilterWrapper>\n    </NavMenu>\n  );\n};\n","import styled from '@emotion/styled';\nimport BgImage from '../../images/bg-Image.png';\n\nexport const Wrapper = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  padding: 28px 36px 36px 36px;\n  width: 380px;\n  height: 460px;\n  background: linear-gradient(\n    114.99deg,\n    #471ca9 -0.99%,\n    #5736a3 54.28%,\n    #4b2a99 78.99%\n  );\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n  border-radius: 20px;\n`;\nexport const Logo = styled.div`\n  position: absolute;\n  left: 20px;\n  top: 20px;\n`;\nexport const BgImg = styled.div`\n  width: 308px;\n  height: 168px;\n  background-image: url(${BgImage});\n`;\nexport const AvatarWrapper = styled.div`\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  left: 150px;\n  top: 178px;\n  z-index: 10;\n  width: 80px;\n  height: 80px;\n  background: #ebd8ff;\n  box-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06),\n    inset 0px -2.19582px 4.39163px #ae7be3,\n    inset 0px 4.39163px 3.29372px #fbf8ff;\n  border-radius: 50%;\n`;\nexport const AvatarWrapperBg = styled.div`\n  width: 62px;\n  height: 62px;\n  background: #5736a3;\n  border-radius: 50%;\n`;\n\nexport const Avatar = styled.img`\n  width: 62px;\n  height: 62px;\n  border-radius: 50%;\n`;\nexport const Band = styled.div`\n  position: absolute;\n  left: 0px;\n  top: 214px;\n  width: 100%;\n  height: 8px;\n  background: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n    inset 0px -1.71846px 3.43693px #ae7be3, inset 0px 3.43693px 2.5777px #fbf8ff;\n`;\nexport const TwtInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 16px;\n  margin-top: 88px;\n  font-style: normal;\n  color: #ebd8ff;\n  font-size: 20px;\n  line-height: 1.2;\n  text-transform: uppercase;\n`;\n\nexport const FollowBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 26px;\n  padding: 14px 0 14px 0;\n  min-width: 196px;\n  font-style: normal;\n  font-weight: 600;\n  color: #373737;\n  font-size: 18px;\n  line-height: 1.2;\n  text-transform: uppercase;\n  background-color: ${props => (props[`isfollowing`] ? '#5CD3A8' : '#ebd8ff')};\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border: none;\n  outline: none;\n  border-radius: 10px;\n  cursor: pointer;\n`;\n","import LogoImg from '../../images/logo.png';\nimport DefaultAvatar from '../../images/default-avatar.png';\n\nimport {\n  Wrapper,\n  Logo,\n  BgImg,\n  AvatarWrapper,\n  AvatarWrapperBg,\n  Avatar,\n  Band,\n  TwtInfo,\n  FollowBtn,\n} from './TweetsItem.styled';\n\nexport const TweetsItem = ({\n  id,\n  avatar,\n  tweets,\n  followers,\n  filterStatus,\n  isFollow,\n}) => {\n  const quantityFollowers = (filterStatus.following ? 1 : 0) + followers;\n  return (\n    <Wrapper>\n      <Logo>\n        <img src={LogoImg} width=\"76px\" height=\"22px\" alt=\"logo\" />\n      </Logo>\n      <BgImg />\n      <AvatarWrapper>\n        <AvatarWrapperBg>\n          <Avatar\n            src={avatar ? avatar : DefaultAvatar}\n            width=\"62px\"\n            height=\"62px\"\n          />\n        </AvatarWrapperBg>\n      </AvatarWrapper>\n      <Band />\n      <TwtInfo>\n        <p>{tweets.toLocaleString('en-EN')} Tweets</p>\n        <p>{quantityFollowers.toLocaleString('en-EN')} Followers</p>\n      </TwtInfo>\n      <FollowBtn\n        type=\"buttom\"\n        onClick={() => isFollow(id)}\n        isfollowing={filterStatus.following}\n      >\n        {filterStatus.following ? 'Following' : 'Follow'}\n      </FollowBtn>\n    </Wrapper>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  margin-top: 30px;\n  text-align: center;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 40px;\n  line-height: 1.2;\n  color: #373737;\n  text-shadow: 0 0 5px rgb(174, 123, 227), 0 0 10px rgb(174, 123, 227),\n    0 0 15px rgb(174, 123, 227), 0 0 20px rgb(174, 123, 227),\n    0 0 30px rgb(174, 123, 227), 0 0 40px rgb(174, 123, 227),\n    0 0 55px rgb(174, 123, 227), 0 0 75px rgb(174, 123, 227);\n`;\nexport const ListWrapper = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n  margin-top: 30px;\n`;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://64899d3e5fa58521caafed73.mockapi.io';\n\nexport const getTweets = async params => {\n  return await axios.get(`/users`, { params });\n};\n","import { TweetsItem } from 'components/TweetsItem/TweetsItem';\nimport { ListWrapper, Title } from './TweetsList.styled';\nimport { useState, useEffect } from 'react';\nimport { getTweets } from 'services/api';\n\nconst statusFilters = Object.freeze({\n  following: false,\n});\n\nexport const TweetsList = ({ filterValue, loadParams }) => {\n  const [tweets, setTweets] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const response = await getTweets(loadParams);\n        const storedTweets = JSON.parse(localStorage.getItem('tweets')) || [];\n        const updatedTweets = response.data.map(tweet => {\n          const storedTweet = storedTweets.find(t => t.id === tweet.id);\n          return {\n            ...tweet,\n            filterStatus: storedTweet\n              ? storedTweet.filterStatus\n              : statusFilters,\n          };\n        });\n        localStorage.setItem('tweets', JSON.stringify(updatedTweets));\n        setTweets(JSON.parse(localStorage.getItem('tweets')));\n      } catch (error) {\n        console.log(error.message);\n      }\n    })();\n  }, [loadParams]);\n\n  const toggleFollowing = id => {\n    const updatedTweets = tweets.map(tweet => {\n      if (tweet.id === id) {\n        const updatedFilterStatus = {\n          ...tweet.filterStatus,\n          following: tweet.filterStatus.following ? false : true,\n        };\n        return { ...tweet, filterStatus: updatedFilterStatus };\n      }\n\n      return tweet;\n    });\n    localStorage.setItem('tweets', JSON.stringify(updatedTweets));\n    setTweets(JSON.parse(localStorage.getItem('tweets')));\n    return;\n  };\n\n  const getFilteredTweeters = filter => {\n    switch (filter) {\n      case 'follow':\n        return tweets.filter(tweet => tweet.filterStatus.following !== true);\n      case 'followings':\n        return tweets.filter(tweet => tweet.filterStatus.following === true);\n      default:\n        return tweets;\n    }\n  };\n  const filteredTweeters = getFilteredTweeters(filterValue);\n\n  return (\n    <>\n      <Title>Follow the tweeters</Title>\n      <ListWrapper>\n        {filteredTweeters.map(\n          ({ id, avatar, tweets, followers, filterStatus }) => {\n            return (\n              <TweetsItem\n                key={id}\n                id={id}\n                avatar={avatar}\n                tweets={tweets}\n                followers={followers}\n                filterStatus={filterStatus}\n                isFollow={toggleFollowing}\n              />\n            );\n          }\n        )}\n      </ListWrapper>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const LoadBtn = styled.button`\n  display: block;\n  margin-top: 30px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 5px;\n  text-align: center;\n  font-style: normal;\n  font-size: 18px;\n  line-height: 1.2;\n  color: #373737;\n  background-color: transparent;\n  border: 2px solid #ffffff;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: all 259ms;\n\n  &:hover {\n    box-shadow: 0px 0px 9px 3px rgba(255, 255, 255, 0.8);\n    color: white;\n    text-shadow: 0 0 5px rgb(255, 255, 255), 0 0 10px rgb(255, 255, 255),\n      0 0 15px rgb(255, 255, 255), 0 0 20px rgb(255, 255, 255),\n      0 0 30px rgb(255, 255, 255), 0 0 40px rgb(255, 255, 255),\n      0 0 55px rgb(255, 255, 255), 0 0 75px rgb(255, 255, 255);\n  }\n`;\n","import { LoadBtn } from './LoadMoreBtn.styled';\n\nexport const LoadMoreBtn = ({ onLoadMore }) => {\n  return (\n    <LoadBtn type=\"button\" onClick={onLoadMore}>\n      Load More...\n    </LoadBtn>\n  );\n};\n","import { Section } from 'components/Section/Section';\nimport { Container } from 'components/Container/Container';\nimport { Navigator } from 'components/Navigator/Navigator';\nimport { TweetsList } from 'components/TweetsList/TweetsList';\nimport { useState } from 'react';\nimport { LoadMoreBtn } from 'components/LoadMoreBtn/LoadMoreBtn';\n\nconst Tweets = () => {\n  const [filter, setFilter] = useState('all');\n  const [params, setParams] = useState({ page: 1, limit: 6 });\n  const handleLoadMore = () => {\n    setParams(prevState =>\n      prevState.limit < 12\n        ? { ...prevState, limit: prevState.limit + 3 }\n        : prevState\n    );\n  };\n  const handleChange = e => {\n    setFilter(e.target.value);\n  };\n  return (\n    <Section>\n      <Container>\n        <Navigator filterValue={handleChange} />\n        <TweetsList filterValue={filter} loadParams={params} />\n        {params.limit < 12 ? <LoadMoreBtn onLoadMore={handleLoadMore} /> : null}\n      </Container>\n    </Section>\n  );\n};\n\nexport default Tweets;\n"],"names":["SectionWrapper","styled","_templateObject","_taggedTemplateLiteral","Section","_ref","children","_jsx","NavMenu","FilterWrapper","_templateObject2","Select","_templateObject3","BackButton","Link","_templateObject4","Navigator","filterValue","_jsxs","to","HiArrowLeft","size","name","onChange","value","BsFilterLeft","Wrapper","Logo","BgImg","BgImage","AvatarWrapper","AvatarWrapperBg","_templateObject5","Avatar","_templateObject6","Band","_templateObject7","TwtInfo","_templateObject8","FollowBtn","_templateObject9","props","TweetsItem","id","avatar","tweets","followers","filterStatus","isFollow","quantityFollowers","following","src","LogoImg","width","height","alt","DefaultAvatar","toLocaleString","type","onClick","isfollowing","Title","ListWrapper","axios","getTweets","_asyncToGenerator","_regeneratorRuntime","mark","_callee","params","wrap","_context","prev","next","abrupt","sent","stop","_x","apply","arguments","statusFilters","Object","freeze","TweetsList","loadParams","_useState","useState","_useState2","_slicedToArray","setTweets","useEffect","response","storedTweets","updatedTweets","JSON","parse","localStorage","getItem","data","map","tweet","storedTweet","find","t","_objectSpread","setItem","stringify","t0","console","log","message","toggleFollowing","updatedFilterStatus","filteredTweeters","filter","getFilteredTweeters","_Fragment","_ref3","LoadBtn","LoadMoreBtn","onLoadMore","setFilter","_useState3","page","limit","_useState4","setParams","Container","e","target","prevState"],"sourceRoot":""}