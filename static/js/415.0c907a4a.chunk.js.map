{"version":3,"file":"static/js/415.0c907a4a.chunk.js","mappings":"8JAEaA,E,QAAiBC,EAAAA,QAAcC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yD,SCA/BC,EAAU,SAAHC,GAAsB,IAAhBC,EAAQD,EAARC,SACxB,OAAOC,EAAAA,EAAAA,KAACP,EAAc,CAAAM,SAAEA,GAC1B,C,oKCDaE,EAAUP,EAAAA,EAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6HAOpBM,EAAgBR,EAAAA,EAAAA,IAAUS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,mEAK1BQ,EAASV,EAAAA,EAAAA,OAAaW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,uPAWtBU,GAAaZ,EAAAA,EAAAA,GAAOa,EAAAA,GAAPb,CAAYc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,kiB,SCtBzBa,EAAY,SAAHX,GAAyB,IAAnBY,EAAWZ,EAAXY,YAC1B,OACEC,EAAAA,EAAAA,MAACV,EAAO,CAAAF,SAAA,EACNY,EAAAA,EAAAA,MAACL,EAAU,CAACM,GAAG,IAAGb,SAAA,EAChBC,EAAAA,EAAAA,KAACa,EAAAA,IAAW,CAACC,KAAK,OAAO,WAG3BH,EAAAA,EAAAA,MAACT,EAAa,CAAAH,SAAA,EACZY,EAAAA,EAAAA,MAACP,EAAM,CAACW,KAAK,WAAWC,SAAUN,EAAYX,SAAA,EAC5CC,EAAAA,EAAAA,KAAA,UAAQiB,MAAM,MAAKlB,SAAC,cACpBC,EAAAA,EAAAA,KAAA,UAAQiB,MAAM,SAAQlB,SAAC,YACvBC,EAAAA,EAAAA,KAAA,UAAQiB,MAAM,aAAYlB,SAAC,mBAE7BC,EAAAA,EAAAA,KAACkB,EAAAA,IAAY,CAACJ,KAAK,YAI3B,E,wCCnBaK,EAAQzB,EAAAA,EAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oaAajBwB,EAAc1B,EAAAA,EAAAA,GAASS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,+G,UCbpCyB,EAAAA,EAAAA,SAAAA,QAAyB,8CAElB,I,oBAAMC,EAAS,eAAAxB,GAAAyB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACVT,EAAAA,EAAAA,IAAU,UAAU,KAAD,SAAAO,EAAAG,OAAA,SAAAH,EAAAI,MAAA,wBAAAJ,EAAAK,OAAA,GAAAP,EAAA,KACjC,kBAFqB,OAAA5B,EAAAoC,MAAA,KAAAC,UAAA,K,8BCDTC,EAAU1C,EAAAA,EAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wZAkBnByC,EAAO3C,EAAAA,EAAAA,IAAUS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,8DAKjB0C,EAAQ5C,EAAAA,EAAAA,IAAUW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,2EAGL2C,GAEbC,EAAgB9C,EAAAA,EAAAA,IAAUc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,2XAgB1B6C,EAAkB/C,EAAAA,EAAAA,IAAUgD,IAAAA,GAAA9C,EAAAA,EAAAA,GAAA,0FAO5B+C,EAASjD,EAAAA,EAAAA,IAAUkD,IAAAA,GAAAhD,EAAAA,EAAAA,GAAA,kEAKnBiD,EAAOnD,EAAAA,EAAAA,IAAUoD,IAAAA,GAAAlD,EAAAA,EAAAA,GAAA,qQAUjBmD,EAAUrD,EAAAA,EAAAA,IAAUsD,IAAAA,GAAApD,EAAAA,EAAAA,GAAA,+PAcpBqD,EAAYvD,EAAAA,EAAAA,OAAawD,IAAAA,GAAAtD,EAAAA,EAAAA,GAAA,gcAahB,SAAAuD,GAAK,OAAKA,EAAK,YAAkB,UAAY,SAAS,ICjF/DC,EAAa,SAAHtD,GAIhB,IAHLuD,EAAKvD,EAALuD,MAEAC,EAAQxD,EAARwD,SAEQC,EAA6CF,EAA7CE,GAAIC,EAAyCH,EAAzCG,OAAQC,EAAiCJ,EAAjCI,OAAQC,EAAyBL,EAAzBK,UAAWC,EAAcN,EAAdM,UACjCC,GAAqBD,EAAY,EAAI,GAAKD,EAChD,OACE/C,EAAAA,EAAAA,MAACyB,EAAO,CAAArC,SAAA,EACNC,EAAAA,EAAAA,KAACqC,EAAI,CAAAtC,UACHC,EAAAA,EAAAA,KAAA,OAAK6D,IAAKC,EAASC,MAAM,OAAOC,OAAO,OAAOC,IAAI,YAEpDjE,EAAAA,EAAAA,KAACsC,EAAK,KACNtC,EAAAA,EAAAA,KAACwC,EAAa,CAAAzC,UACZC,EAAAA,EAAAA,KAACyC,EAAe,CAAA1C,UACdC,EAAAA,EAAAA,KAAC2C,EAAM,CACLkB,IAAKL,GAAkBU,EACvBH,MAAM,OACNC,OAAO,cAIbhE,EAAAA,EAAAA,KAAC6C,EAAI,KACLlC,EAAAA,EAAAA,MAACoC,EAAO,CAAAhD,SAAA,EACNY,EAAAA,EAAAA,MAAA,KAAAZ,SAAA,CAAI0D,EAAOU,eAAe,SAAS,cACnCxD,EAAAA,EAAAA,MAAA,KAAAZ,SAAA,CAAI6D,EAAkBO,eAAe,SAAS,oBAEhDnE,EAAAA,EAAAA,KAACiD,EAAS,CACRmB,KAAK,SACLC,QAAS,kBAAMf,EAASC,EAAG,EAC3Be,YAAaX,EAAU5D,SAEtB4D,EAAY,YAAc,aAInC,ECnDaY,GAAkB,WAC7B,OAAOC,KAAKC,MAAMC,aAAaC,QAAQ,YAAc,EACvD,ECFaC,GAAkB,SAAAnB,GAC7BiB,aAAaG,QAAQ,SAAUL,KAAKM,UAAUrB,GAChD,ECCasB,GAAe,SAAAtB,GAC1B,IAAMuB,EAAeT,KACfU,EAAgBxB,EAAOyB,KAAKC,KAAI,SAAA9B,GACpC,IAAM+B,EAAcJ,EAAaK,MAAK,SAAAC,GAAC,OAAIA,EAAE/B,KAAOF,EAAME,EAAE,IAC5D,OAAAgC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKlC,GAAK,IACRM,YAAWyB,GAAcA,EAAYzB,WAEzC,IACAiB,GAAgBK,EAClB,E,WCHaO,GAAa,SAAH1F,GAAqC,IAA/BY,EAAWZ,EAAXY,YAAa+E,EAAU3F,EAAV2F,WACxCC,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCjC,EAAMmC,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAAkCJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,IAE9BG,EAAAA,EAAAA,YAAU,YACR5E,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAC,IAAA,IAAA0E,EAAA,OAAA5E,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACoB,OAAnBoE,GAAa,GAAMtE,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEMR,IAAY,KAAD,EAA5B8E,EAAQxE,EAAAI,KACd+C,GAAaqB,GACbN,EAAUvB,MAAmB3C,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAyE,GAAAzE,EAAA,SAE7B0E,QAAQC,IAAI3E,EAAAyE,GAAMG,SAAS,QAEP,OAFO5E,EAAAC,KAAA,GAE3BqE,GAAa,GAAOtE,EAAA6E,OAAA,6BAAA7E,EAAAK,OAAA,GAAAP,EAAA,uBATxBH,EAYF,GAAG,IAEH,IAAMmF,EAAkB,SAAAnD,GACtB,IAAM0B,EAAgBxB,EAAO0B,KAAI,SAAA9B,GAC/B,OAAIA,EAAME,KAAOA,GACfgC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYlC,GAAK,IAAEM,WAAYN,EAAMM,YAEhCN,CACT,IACAuB,GAAgBK,GAChBa,EAAUvB,KAEZ,EACMoC,ECxCyB,SAACjG,EAAa+C,GAC7C,OAAQ/C,GACN,IAAK,SACH,OAAO+C,EAAOmD,QAAO,SAAAvD,GAAK,OAAwB,IAApBA,EAAMM,SAAkB,IACxD,IAAK,aACH,OAAOF,EAAOmD,QAAO,SAAAvD,GAAK,OAAwB,IAApBA,EAAMM,SAAkB,IACxD,QACE,OAAOF,EAEb,CD+ByBoD,CAAkBnG,EAAa+C,GAAQqD,MAC5D,EACArB,GAEF,OACE9E,EAAAA,EAAAA,MAAAoG,EAAAA,SAAA,CAAAhH,SAAA,EACEC,EAAAA,EAAAA,KAACmB,EAAK,CAAApB,SAAC,wBACNkG,GACCjG,EAAAA,EAAAA,KAACgH,GAAAA,EAAM,KAEPhH,EAAAA,EAAAA,KAACoB,EAAW,CAAArB,SACT4G,EAAexB,KAAI,SAAA9B,GAClB,OACErD,EAAAA,EAAAA,KAACoD,EAAU,CAETC,MAAOA,EACPC,SAAUoD,GAFLrD,EAAME,GAKjB,QAKV,EE9Da0D,GAAUvH,EAAAA,EAAAA,OAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+sBCAvBsH,GAAc,SAAHpH,GAAwB,IAAlBqH,EAAUrH,EAAVqH,WAC5B,OACEnH,EAAAA,EAAAA,KAACiH,GAAO,CAAC7C,KAAK,SAASC,QAAS8C,EAAWpH,SAAC,gBAIhD,ECoBA,GArBe,WACb,IAAA2F,GAA4BC,EAAAA,EAAAA,UAAS,OAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApCkB,EAAMhB,EAAA,GAAEwB,EAASxB,EAAA,GACxBG,GAA4BJ,EAAAA,EAAAA,UAAS,GAAEK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAhCsB,EAAMrB,EAAA,GAAEsB,EAAStB,EAAA,GAQxB,OACEhG,EAAAA,EAAAA,KAACH,EAAAA,EAAO,CAAAE,UACNY,EAAAA,EAAAA,MAAC4G,EAAAA,EAAS,CAAAxH,SAAA,EACRC,EAAAA,EAAAA,KAACS,EAAS,CAACC,YANI,SAAA8G,GACnBJ,EAAUI,EAAEC,OAAOxG,MACrB,KAKMjB,EAAAA,EAAAA,KAACwF,GAAU,CAAC9E,YAAakG,EAAQnB,WAAY4B,IAC5CA,EAAS,IAAKrH,EAAAA,EAAAA,KAACkH,GAAW,CAACC,WAXX,WACrBG,GAAU,SAAAI,GAAS,OAAKA,EAAY,GAAKA,EAAY,EAAIA,CAAS,GACpE,IASmE,SAIrE,C","sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Navigator/Navigator.styled.jsx","components/Navigator/Navigator.jsx","components/TweetsList/TweetsList.styled.jsx","services/api.js","components/TweetsItem/TweetsItem.styled.jsx","components/TweetsItem/TweetsItem.jsx","utils/getStoredTweets.js","utils/setStoredTweets.js","utils/updateTweets.js","components/TweetsList/TweetsList.jsx","utils/getFilteredTweets.js","components/LoadMoreBtn/LoadMoreBtn.styled.jsx","components/LoadMoreBtn/LoadMoreBtn.jsx","pages/Tweets.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const SectionWrapper = styled.section`\n  padding-top: 80px;\n  padding-bottom: 40px;\n`;\n","import { SectionWrapper } from './Section.styled';\n\nexport const Section = ({ children }) => {\n  return <SectionWrapper>{children}</SectionWrapper>;\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const NavMenu = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding-top: 30px;\n  width: 100%;\n`;\nexport const FilterWrapper = styled.div`\n  display: flex;\n  align-content: center;\n  gap: 7px;\n`;\nexport const Select = styled.select`\n  padding: 5px;\n  font-size: 22px;\n  font-weight: 600;\n  line-height: 1.22;\n  background-color: #5736a3;\n  color: #ebd8ff;\n  border-radius: 10px;\n  outline: none;\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n`;\nexport const BackButton = styled(Link)`\n  display: flex;\n  gap: 7px;\n  width: max-content;\n  align-items: center;\n  padding: 10px;\n  font-style: normal;\n  font-size: 24px;\n  line-height: 1.2;\n  color: #373737;\n  text-decoration: none;\n\n  transition: 250ms;\n  &:hover {\n    color: white;\n    text-shadow: 0 0 5px rgb(255, 255, 255), 0 0 10px rgb(255, 255, 255),\n      0 0 15px rgb(255, 255, 255), 0 0 20px rgb(255, 255, 255),\n      0 0 30px rgb(255, 255, 255), 0 0 40px rgb(255, 255, 255),\n      0 0 55px rgb(255, 255, 255), 0 0 75px rgb(255, 255, 255);\n  }\n`;\n","import { BsFilterLeft } from 'react-icons/bs';\nimport { HiArrowLeft } from 'react-icons/hi';\nimport { NavMenu, FilterWrapper, Select, BackButton } from './Navigator.styled';\n\nexport const Navigator = ({ filterValue }) => {\n  return (\n    <NavMenu>\n      <BackButton to=\"/\">\n        <HiArrowLeft size=\"24\" />\n        Back\n      </BackButton>\n      <FilterWrapper>\n        <Select name=\"tweeters\" onChange={filterValue}>\n          <option value=\"all\">show all</option>\n          <option value=\"follow\">follow</option>\n          <option value=\"followings\">followings</option>\n        </Select>\n        <BsFilterLeft size=\"36\" />\n      </FilterWrapper>\n    </NavMenu>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  margin-top: 30px;\n  text-align: center;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 40px;\n  line-height: 1.2;\n  color: #373737;\n  text-shadow: 0 0 5px rgb(174, 123, 227), 0 0 10px rgb(174, 123, 227),\n    0 0 15px rgb(174, 123, 227), 0 0 20px rgb(174, 123, 227),\n    0 0 30px rgb(174, 123, 227), 0 0 40px rgb(174, 123, 227),\n    0 0 55px rgb(174, 123, 227), 0 0 75px rgb(174, 123, 227);\n`;\nexport const ListWrapper = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n  margin-top: 30px;\n`;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://64899d3e5fa58521caafed73.mockapi.io';\n\nexport const getTweets = async () => {\n  return await axios.get(`/users`);\n};\n","import styled from '@emotion/styled';\nimport BgImage from '../../images/bg-Image.png';\n\nexport const Wrapper = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  padding: 28px 36px 36px 36px;\n  width: 380px;\n  height: 460px;\n  background: linear-gradient(\n    114.99deg,\n    #471ca9 -0.99%,\n    #5736a3 54.28%,\n    #4b2a99 78.99%\n  );\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n  border-radius: 20px;\n`;\nexport const Logo = styled.div`\n  position: absolute;\n  left: 20px;\n  top: 20px;\n`;\nexport const BgImg = styled.div`\n  width: 308px;\n  height: 168px;\n  background-image: url(${BgImage});\n`;\nexport const AvatarWrapper = styled.div`\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  left: 150px;\n  top: 178px;\n  z-index: 10;\n  width: 80px;\n  height: 80px;\n  background: #ebd8ff;\n  box-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06),\n    inset 0px -2.19582px 4.39163px #ae7be3,\n    inset 0px 4.39163px 3.29372px #fbf8ff;\n  border-radius: 50%;\n`;\nexport const AvatarWrapperBg = styled.div`\n  width: 62px;\n  height: 62px;\n  background: #5736a3;\n  border-radius: 50%;\n`;\n\nexport const Avatar = styled.img`\n  width: 62px;\n  height: 62px;\n  border-radius: 50%;\n`;\nexport const Band = styled.div`\n  position: absolute;\n  left: 0px;\n  top: 214px;\n  width: 100%;\n  height: 8px;\n  background: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n    inset 0px -1.71846px 3.43693px #ae7be3, inset 0px 3.43693px 2.5777px #fbf8ff;\n`;\nexport const TwtInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 16px;\n  margin-top: 88px;\n  font-style: normal;\n  color: #ebd8ff;\n  font-size: 20px;\n  line-height: 1.2;\n  text-transform: uppercase;\n`;\n\nexport const FollowBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 26px;\n  padding: 14px 0 14px 0;\n  min-width: 196px;\n  font-style: normal;\n  font-weight: 600;\n  color: #373737;\n  font-size: 18px;\n  line-height: 1.2;\n  text-transform: uppercase;\n  background-color: ${props => (props[`isfollowing`] ? '#5CD3A8' : '#ebd8ff')};\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border: none;\n  outline: none;\n  border-radius: 10px;\n  cursor: pointer;\n`;\n","import LogoImg from '../../images/logo.png';\nimport DefaultAvatar from '../../images/default-avatar.png';\n\nimport {\n  Wrapper,\n  Logo,\n  BgImg,\n  AvatarWrapper,\n  AvatarWrapperBg,\n  Avatar,\n  Band,\n  TwtInfo,\n  FollowBtn,\n} from './TweetsItem.styled';\n\nexport const TweetsItem = ({\n  tweet,\n\n  isFollow,\n}) => {\n  const { id, avatar, tweets, followers, following } = tweet;\n  const quantityFollowers = (following ? 1 : 0) + followers;\n  return (\n    <Wrapper>\n      <Logo>\n        <img src={LogoImg} width=\"76px\" height=\"22px\" alt=\"logo\" />\n      </Logo>\n      <BgImg />\n      <AvatarWrapper>\n        <AvatarWrapperBg>\n          <Avatar\n            src={avatar ? avatar : DefaultAvatar}\n            width=\"62px\"\n            height=\"62px\"\n          />\n        </AvatarWrapperBg>\n      </AvatarWrapper>\n      <Band />\n      <TwtInfo>\n        <p>{tweets.toLocaleString('en-EN')} Tweets</p>\n        <p>{quantityFollowers.toLocaleString('en-EN')} Followers</p>\n      </TwtInfo>\n      <FollowBtn\n        type=\"buttom\"\n        onClick={() => isFollow(id)}\n        isfollowing={following}\n      >\n        {following ? 'Following' : 'Follow'}\n      </FollowBtn>\n    </Wrapper>\n  );\n};\n","export const getStoredTweets = () => {\n  return JSON.parse(localStorage.getItem('tweets')) || [];\n};\n","export const setStoredTweets = tweets => {\n  localStorage.setItem('tweets', JSON.stringify(tweets));\n};\n","import { getStoredTweets } from './getStoredTweets';\nimport { setStoredTweets } from './setStoredTweets';\n\nexport const updateTweets = tweets => {\n  const storedTweets = getStoredTweets();\n  const updatedTweets = tweets.data.map(tweet => {\n    const storedTweet = storedTweets.find(t => t.id === tweet.id);\n    return {\n      ...tweet,\n      following: storedTweet ? storedTweet.following : false,\n    };\n  });\n  setStoredTweets(updatedTweets);\n};\n","import { useState, useEffect } from 'react';\nimport { ListWrapper, Title } from './TweetsList.styled';\nimport { getTweets } from 'services/api';\nimport { getFilteredTweets } from 'utils/getFilteredTweets';\nimport { TweetsItem } from 'components/TweetsItem/TweetsItem';\nimport { getStoredTweets } from 'utils/getStoredTweets';\nimport { updateTweets } from 'utils/updateTweets';\nimport { setStoredTweets } from 'utils/setStoredTweets';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const TweetsList = ({ filterValue, loadParams }) => {\n  const [tweets, setTweets] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      setIsLoading(true);\n      try {\n        const response = await getTweets();\n        updateTweets(response);\n        setTweets(getStoredTweets());\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, []);\n\n  const toggleFollowing = id => {\n    const updatedTweets = tweets.map(tweet => {\n      if (tweet.id === id) {\n        return { ...tweet, following: !tweet.following };\n      }\n      return tweet;\n    });\n    setStoredTweets(updatedTweets);\n    setTweets(getStoredTweets());\n    return;\n  };\n  const filteredTweets = getFilteredTweets(filterValue, tweets).slice(\n    0,\n    loadParams\n  );\n  return (\n    <>\n      <Title>Follow the tweeters</Title>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <ListWrapper>\n          {filteredTweets.map(tweet => {\n            return (\n              <TweetsItem\n                key={tweet.id}\n                tweet={tweet}\n                isFollow={toggleFollowing}\n              />\n            );\n          })}\n        </ListWrapper>\n      )}\n    </>\n  );\n};\n","export const getFilteredTweets = (filterValue, tweets) => {\n  switch (filterValue) {\n    case 'follow':\n      return tweets.filter(tweet => tweet.following !== true);\n    case 'followings':\n      return tweets.filter(tweet => tweet.following === true);\n    default:\n      return tweets;\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const LoadBtn = styled.button`\n  display: block;\n  margin-top: 30px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 5px;\n  text-align: center;\n  font-style: normal;\n  font-size: 18px;\n  line-height: 1.2;\n  color: #373737;\n  background-color: transparent;\n  border: 2px solid #ffffff;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: all 259ms;\n\n  &:hover {\n    box-shadow: 0px 0px 9px 3px rgba(255, 255, 255, 0.8);\n    color: white;\n    text-shadow: 0 0 5px rgb(255, 255, 255), 0 0 10px rgb(255, 255, 255),\n      0 0 15px rgb(255, 255, 255), 0 0 20px rgb(255, 255, 255),\n      0 0 30px rgb(255, 255, 255), 0 0 40px rgb(255, 255, 255),\n      0 0 55px rgb(255, 255, 255), 0 0 75px rgb(255, 255, 255);\n  }\n`;\n","import { LoadBtn } from './LoadMoreBtn.styled';\n\nexport const LoadMoreBtn = ({ onLoadMore }) => {\n  return (\n    <LoadBtn type=\"button\" onClick={onLoadMore}>\n      Load More...\n    </LoadBtn>\n  );\n};\n","import { Section } from 'components/Section/Section';\nimport { Container } from 'components/Container/Container';\nimport { Navigator } from 'components/Navigator/Navigator';\nimport { TweetsList } from 'components/TweetsList/TweetsList';\nimport { useState } from 'react';\nimport { LoadMoreBtn } from 'components/LoadMoreBtn/LoadMoreBtn';\n\nconst Tweets = () => {\n  const [filter, setFilter] = useState('all');\n  const [params, setParams] = useState(3);\n\n  const handleLoadMore = () => {\n    setParams(prevState => (prevState < 12 ? prevState + 3 : prevState));\n  };\n  const handleChange = e => {\n    setFilter(e.target.value);\n  };\n  return (\n    <Section>\n      <Container>\n        <Navigator filterValue={handleChange} />\n        <TweetsList filterValue={filter} loadParams={params} />\n        {params < 12 ? <LoadMoreBtn onLoadMore={handleLoadMore} /> : null}\n      </Container>\n    </Section>\n  );\n};\n\nexport default Tweets;\n"],"names":["SectionWrapper","styled","_templateObject","_taggedTemplateLiteral","Section","_ref","children","_jsx","NavMenu","FilterWrapper","_templateObject2","Select","_templateObject3","BackButton","Link","_templateObject4","Navigator","filterValue","_jsxs","to","HiArrowLeft","size","name","onChange","value","BsFilterLeft","Title","ListWrapper","axios","getTweets","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","sent","stop","apply","arguments","Wrapper","Logo","BgImg","BgImage","AvatarWrapper","AvatarWrapperBg","_templateObject5","Avatar","_templateObject6","Band","_templateObject7","TwtInfo","_templateObject8","FollowBtn","_templateObject9","props","TweetsItem","tweet","isFollow","id","avatar","tweets","followers","following","quantityFollowers","src","LogoImg","width","height","alt","DefaultAvatar","toLocaleString","type","onClick","isfollowing","getStoredTweets","JSON","parse","localStorage","getItem","setStoredTweets","setItem","stringify","updateTweets","storedTweets","updatedTweets","data","map","storedTweet","find","t","_objectSpread","TweetsList","loadParams","_useState","useState","_useState2","_slicedToArray","setTweets","_useState3","_useState4","isLoading","setIsLoading","useEffect","response","t0","console","log","message","finish","toggleFollowing","filteredTweets","filter","getFilteredTweets","slice","_Fragment","Loader","LoadBtn","LoadMoreBtn","onLoadMore","setFilter","params","setParams","Container","e","target","prevState"],"sourceRoot":""}